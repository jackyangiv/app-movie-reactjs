{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\duong\\\\Desktop\\\\ReactJS\\\\Assignment 02 (Starter Code)\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\nconst myArray = [\"bedroomone\", \"bedroomonetwo\", \"bathroom\"];\nconst bedrooms = myArray.filter(name => name.includes(\"bedroom\"));\nconsole.log(bedrooms);","map":{"version":3,"names":["React","ReactDOM","App","serviceWorker","jsxDEV","_jsxDEV","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","register","myArray","bedrooms","filter","name","includes","console","log"],"sources":["C:/Users/duong/Desktop/ReactJS/Assignment 02 (Starter Code)/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\nconst myArray = [\"bedroomone\", \"bedroomonetwo\", \"bathroom\"];\nconst bedrooms = myArray.filter((name) => name.includes(\"bedroom\"));\nconsole.log(bedrooms);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjDJ,QAAQ,CAACK,MAAM,eACbD,OAAA,CAACL,KAAK,CAACO,UAAU;EAAAC,QAAA,eACfH,OAAA,CAACH,GAAG;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACU,EACnBC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChC;;AAED;AACA;AACA;AACAX,aAAa,CAACY,QAAQ,EAAE;AACxB,MAAMC,OAAO,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,UAAU,CAAC;AAC3D,MAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnEC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}